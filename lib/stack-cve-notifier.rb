# encoding: utf-8
require_relative 'tracker-client'
require_relative 'slack-client'
require_relative 'cve-tags'

class StackCVENotifier < Struct.new(:cve_history, :cves_dir, :stacks_dir)
  def run!(system_name, system_shorthand, notifiers_to_execute_only_with_cves, notifiers_to_always_execute)
    cve_tags = CVETags.new(stacks_dir)
    related_cves = cve_tags.related_cves(system_name)
    unrelated_cves = cve_tags.unrelated_cves(system_name)

    {
      related_cves => "#{system_shorthand}.yaml",
      unrelated_cves => "#{system_shorthand}-unrelated.yaml"
    }.each do |cves, filename|
      next if cves.empty?

      rss_cve_titles = cves.map { |cve| cve[:title] }
      old_cve_titles = cve_history.read_yaml_cves(filename)

      new_cve_titles = rss_cve_titles - old_cve_titles
      new_cves = cves.select { |cve| new_cve_titles.include? cve[:title] }

      notifiers_to_always_execute.each { |n| n.notify! new_cves, !filename.include?('unrelated') }

      next if new_cves.empty?
      notifiers_to_execute_only_with_cves.each { |n| n.notify! new_cves, !filename.include?('unrelated') }

      new_cve_titles = new_cves.map { |cve| cve[:title] }

      cve_history.write_yaml_cves(new_cve_titles | old_cve_titles,
                                  File.join(cves_dir, filename)
                                 )

      Dir.chdir(cves_dir) do
        raise 'command failed' unless system('git add -A')
        raise 'command failed' unless system("git commit -m 'CVE update'")
      end
    end
  end
end
