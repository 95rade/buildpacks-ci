require 'yaml'

class CVELogger

  attr_accessor :cves_dir

  def initialize(cve_dir)
    @cves_dir = cve_dir
  end

  def read_yaml_cves(yaml_filename)
    file_path = "#{cves_dir}/#{yaml_filename}"

    if File.exists? file_path
      YAML.load_file("#{cves_dir}/#{yaml_filename}").to_a
    else
      File.open(file_path, 'w') { |handle| handle.write([].to_yaml) }
      []
    end
  end

  def write_yaml_cves(cve_list, yaml_path)
    raise "received invalid CVE list to write" unless cve_list.kind_of?(Array)
    raise "file '#{yaml_path}' not found" unless File.exists? yaml_path
    File.open(yaml_path, 'w') { |handle| handle.write(cve_list.to_yaml) }
  end
end
