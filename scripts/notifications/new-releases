#!/usr/bin/env ruby

require 'json'
require 'octokit'
require 'open-uri'
require 'yaml'

Octokit.auto_paginate = true
Octokit.configure do |c|
  c.login    = ENV['GITHUB_USERNAME']
  c.password = ENV['GITHUB_PASSWORD']
end

new_releases_dir = ARGV[0]

TAGS = {
  cfrelease:   -> { Octokit.tags('cloudfoundry/cf-release').map(&:name).grep(/^v/) },
  ruby:   -> { Octokit.tags('ruby/ruby').map(&:name).grep(/^v/) },
  jruby:  -> { Octokit.tags('jruby/jruby').map(&:name).grep(/^(1|9)\./) },
  nginx:  -> { Octokit.tags('nginx/nginx').map(&:name).grep(/^release/) },
  php:    -> { Octokit.tags('php/php-src').map(&:name).grep(/^php/) },
  go:     -> { Octokit.tags('golang/go').map(&:name).grep(/^go/) },
  nodejs: -> { Octokit.tags('nodejs/node').map(&:name).grep(/^v/) },
  httpd:  -> { Octokit.tags('apache/httpd').map(&:name).grep(/^2\./) },
  maven:  -> { Octokit.tags('apache/maven').map(&:name).grep(/^maven/) },
  python: -> { JSON.parse(open('https://hg.python.org/cpython/json-tags').read)["tags"].map{ |t| t["tag"] } },
  godep:  -> { Octokit.tags('tools/godep').map(&:name).grep(/^v/) },
  openjdk: -> { YAML.load(open('https://download.run.pivotal.io/openjdk/trusty/x86_64/index.yml').read).keys }
}

TAGS.each do |current_depedency, get_tags|
  current_tags = get_tags.call

  filename = "#{new_releases_dir}/#{current_depedency}.yaml"
  if File.exist?(filename)
    previous_tags = YAML.load_file(filename)
  else
    previous_tags = []
  end

  diff_tags = current_tags - previous_tags

  if diff_tags.any?
    File.write(filename, current_tags.to_yaml)
    puts "There are *#{diff_tags.length}* new updates to the *#{current_depedency}* dependency:\n"
    diff_tags.each do |tag|
      puts "- version *#{tag}*\n"
    end

  else
    warn "There are no new updates to the *#{current_depedency}* dependency"
  end
end


