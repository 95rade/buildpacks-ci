---
resources:
  - name: monday-funday
    type: cron
    source:
      expression: 0 5 * * 1
      location: America/New_York
  - name: buildpacks-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/buildpacks-ci
  - name: stacks
    type: git
    source:
      uri: git@github.com:cloudfoundry/stacks.git
      branch: master
      private_key: {{stacks-private-key}}
  - name: stacks-release
    type: git
    source:
      uri: git@github.com:pivotal-cf-experimental/stacks-release.git
      branch: master
      private_key: {{stacks-release-private-key}}
  - name: stack-s3
    type: s3
    source:
      bucket: pivotal-buildpacks
      regexp: cflinuxfs2-(.*).tar.gz
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
  - name: receipt-s3
    type: s3
    source:
      bucket: pivotal-buildpacks
      regexp: cflinuxfs2_receipt-(.*)
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
  - name: version
    type: semver
    source:
      bucket: pivotal-buildpacks
      key: versions/stack
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
  - name: deployments-buildpacks
    type: git
    source:
      uri: git@github.com:pivotal-cf/deployments-buildpacks
      private_key: {{deployments-private-key}}
      branch: master
  - name: stack-ci-8-cf-deployment
    type: bosh-deployment
    source:
      target: https://stack-ci-8.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: cf-warden
      ignore_ssl: true
  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite
  - name: cf-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-release
      branch: develop
  - name: cf-release-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-release
      branch: develop
      private_key: {{cf-release-private-key}}
  - name: lite-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  - name: docker-cflinuxfs2-rootfs
    type: docker-image
    source:
      repository: cloudfoundry/cflinuxfs2
      username: {{stacks-docker-username}}
      password: {{stacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io
  - name: stack-github-release
    type: github-release
    source:
      drafts: true
      user: cloudfoundry
      repository: stacks
      access_token: {{buildpacks-github-token}}
  - name: new-cves
    type: git
    source:
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      branch: new-cve-notifications
      private_key: {{buildpacks-ci-binary-builds-private-key}}
jobs:
  - name: notification
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: monday-funday
          trigger: true
      - task: create-tracker-story
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
          run:
            path: buildpacks-ci/scripts/notifications/pivotal_tracker
            args: ['Monday-Funday *stack* release', 'This is a reminder that a stack release was automatically started, please monitor it, and deliver story when done.']
          params:
            TRACKER_PROJECT_ID: 1042066
            TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
  - name: build-rootfs
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: deployments-buildpacks
        - get: monday-funday
          passed: [ "notification" ]
          trigger: true
        - get: new-cves
          trigger: true
      - aggregate:
        - get: stacks
        - get: version
          params: { pre: rc }
      - task: make-rootfs
        file: buildpacks-ci/tasks/make-rootfs.yml
        privileged: true
      - put: stack-s3
        params:
          from: make-rootfs/stacks/cflinuxfs2-(.*).tar.gz
          to: /rootfs/
      - put: receipt-s3
        params:
          from: make-rootfs/cflinuxfs2_receipt-(.*)
          to: /rootfs/
      - put: version
        params: { file: version/number }
  - name: deploy-cf-to-stack-ci-8
    serial: true
    serial_groups: [ stack-ci-8 ]
    plan:
      - aggregate:
        - get: deployments-buildpacks
        - get: bosh-lite
        - get: buildpacks-ci
        - get: cf-release
        - get: lite-stemcell
        - get: stack-s3
          passed: [ build-rootfs ]
        - get: version
          passed: [ build-rootfs ]
          trigger: true
        - get: receipt-s3
          passed: [ build-rootfs ]
        - get: stacks
          passed: [ build-rootfs ]
      - task: diego-release
        file: buildpacks-ci/tasks/checkout-release.yml
        config:
          params:
            RELEASE_NAME: cloudfoundry-incubator/diego-release
            RELEASE_VERSION: 0.1444.0
      - task: recreate-bosh-lite
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: deployments-buildpacks
          run:
            path: buildpacks-ci/scripts/recreate-bosh-lite
          params:
            DEPLOYMENT_NAME: stack-ci-8
            PASSWORD: {{bosh-lite-password}}
        ensure:
          put: deployments-buildpacks
          params:
            repository: recreate-bosh-lite/deployments-buildpacks
            rebase: true
      - task: generate-manifest
        file: buildpacks-ci/tasks/diego-make-manifest.yml
        config:
          params:
            DEPLOYMENT_NAME: stack-ci-8
            CF_CI_PASSWORD: {{ci-cf-password}}
        privileged: true
      - put: deployments-buildpacks
        params:
          repository: generate-manifest/deployments-buildpacks
          rebase: true
      - task: create-stack-release
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: cf-release
            - name: stack-s3
          run:
            path: buildpacks-ci/scripts/stacks/create-release
        privileged: true
      - put: stack-ci-8-cf-deployment
        params:
          manifest: deployments-buildpacks/deployments/stack-ci-8/manifest.yml
          stemcells: [lite-stemcell/*.tgz]
          releases: [create-stack-release/cf-release/dev_releases/cf/*.tgz]
  - name: cats
    serial: true
    serial_groups: [ stack-ci-8 ]
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: cf-release
          passed: [ deploy-cf-to-stack-ci-8 ]
        - get: deployments-buildpacks
        - get: stack-s3
          passed: [ deploy-cf-to-stack-ci-8 ]
        - get: version
          passed: [ deploy-cf-to-stack-ci-8 ]
          trigger: true
        - get: receipt-s3
          passed: [ deploy-cf-to-stack-ci-8 ]
        - get: stacks
          passed: [ deploy-cf-to-stack-ci-8 ]
      - task: cats
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: cf-release
            - name: deployments-buildpacks
          run:
            path: buildpacks-ci/scripts/cats
          params:
            DEPLOYMENT_NAME: stack-ci-8
            CI_CF_USERNAME: {{ci-cf-username}}
            CI_CF_PASSWORD: {{ci-cf-password}}
        privileged: true
  - name: dats
    serial: true
    serial_groups: [ stack-ci-8 ]
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: cf-release
          passed: [ deploy-cf-to-stack-ci-8 ]
          trigger: true
        - get: deployments-buildpacks
      - task: dats
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: deployments-buildpacks
          run:
            path: buildpacks-ci/scripts/dats
          params:
            DEPLOYMENT_NAME: cf-release-ci-8
            CI_CF_USERNAME: {{ci-cf-username}}
            CI_CF_PASSWORD: {{ci-cf-password}}
        privileged: true
  - name: shipit
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: stack-s3
          passed: [ cats ]
        - get: receipt-s3
          passed: [ cats ]
        - get: stacks
          resource: stacks
          passed: [ cats ]
        - get: version
          passed: [ cats ]
          params: { bump: final }
      - task: update-receipt
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: receipt-s3
            - name: stacks
            - name: version
          run:
            path: buildpacks-ci/scripts/stacks/update-receipt
      - task: update-filename
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: stack-s3
            - name: version
          run:
            path: bash
            args:
              - -c
              - "mv stack-s3/cflinuxfs2-*.tar.gz stack-s3/cflinuxfs2-`cat version/number`.tar.gz"
      - put: stack-s3
        params:
          from: update-filename/stack-s3/cflinuxfs2-(.*).tar.gz
          to: /rootfs/
      - put: stacks
        params:
          repository: update-receipt/stacks
          tag: version/number
      - put: version
        params: { file: version/number }
  - name: minor-bump
    serial: true
    plan:
      - get: version
        trigger: true
        passed: [ shipit ]
        params: {bump: minor, pre: rc}
      - put: version
        params: {file: version/number}
  - name: upload-to-github
    serial: true
    plan:
      - aggregate:
        - get: stack-s3
          passed: [ shipit ]
        - get: version
          trigger: true
          passed: [ shipit ]
      - put: stack-github-release
        params:
          name: version/number
          tag: version/number
          globs:
            - stack-s3/cflinuxfs2-*.tar.gz
  - name: upload-to-docker
    serial: true
    plan:
      - aggregate:
        - get: stack-s3
          passed: [ shipit ]
        - get: version
          trigger: true
          passed: [ shipit ]
      - put: docker-cflinuxfs2-rootfs
        params:
          import_file: stack-s3/cflinuxfs2-*.tar.gz
      - put: docker-cflinuxfs2-rootfs
        params:
          load: docker-cflinuxfs2-rootfs
          tag: version/number
  - name: create-bosh-release
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: stack-s3
          passed: [ shipit ]
        - get: version
          passed: [ shipit ]
        - get: stacks-release
      - task: run-both-bosh-scripts
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: stack-s3
            - name: version
            - name: stacks-release
          run:
            path: bash
            args:
              - -c
              - buildpacks-ci/scripts/stacks/create-bosh-private-yml.sh && buildpacks-ci/scripts/stacks/create-bosh-stacks-release.sh
          params:
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
      - put: stacks-release
        params:
          repository: run-both-bosh-scripts/stacks-release
  - name: upload-to-cf-release
    serial: true
    plan:
      - aggregate:
        - get: stack-s3
          passed: [ shipit ]
        - get: cf-release-develop
        - get: buildpacks-ci
        - get: version
          trigger: true
          passed: [ shipit ]
        - get: receipt-s3
          passed: [ shipit ]
      - task: check-can-i-bump
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
          run:
            path: buildpacks-ci/scripts/release/cf/check-can-i-bump
      - task: upload
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: buildpacks-ci
            - name: cf-release-develop
              path: cf-release
            - name: stack-s3
            - name: receipt-s3
            - name: version
          run:
            path: buildpacks-ci/scripts/stacks/upload-to-cf-release
          params:
            ACCESS_KEY_ID: {{blobstore-access-key}}
            SECRET_ACCESS_KEY: {{blobstore-secret-key}}
        privileged: true
      - put: cf-release-develop
        params:
          repository: upload/cf-release
          rebase: true
