---
resources:
  - name: buildpacks-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/buildpacks-ci
  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite
  - name: cf-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-release
      branch: develop
  - name: cf-release-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-release
      branch: develop
      private_key: {{cf-release-private-key}}
  - name: lite-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  - name: deployments-buildpacks
    type: git
    source:
      uri: git@github.com:pivotal-cf/deployments-buildpacks
      private_key: {{deployments-private-key}}
      branch: master
  - name: cf-release-ci-8-cf-deployment
    type: bosh-deployment
    source:
      target: https://cf-release-ci-8.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: cf-warden
      ignore_ssl: true
  - name: java-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: java-buildpack
      access_token: {{buildpacks-github-token}}
  - name: java-offline-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: java-buildpack
      access_token: {{buildpacks-github-token}}
  - name: go-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: go-buildpack
      access_token: {{buildpacks-github-token}}
  - name: python-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: python-buildpack
      access_token: {{buildpacks-github-token}}
  - name: nodejs-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: nodejs-buildpack
      access_token: {{buildpacks-github-token}}
  - name: ruby-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: ruby-buildpack
      access_token: {{buildpacks-github-token}}
  - name: php-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: php-buildpack
      access_token: {{buildpacks-github-token}}
  - name: staticfile-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: staticfile-buildpack
      access_token: {{buildpacks-github-token}}
  - name: binary-buildpack-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: binary-buildpack
      access_token: {{buildpacks-github-token}}
  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}
  - name: buildpack-releases
    type: git
    source:
      uri: git@github.com:cloudfoundry/buildpack-releases.git
      private_key: {{buildpack-releases-private-key}}
      branch: master
jobs:
  - name: deploy-cf-to-cf-release-ci-8
    serial: true
    serial_groups: [ cf-release-ci-8 ]
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
          - get: buildpacks-ci
        - task: recreate-bosh-lite
          config:
            platform: linux
            image: docker:///cfbuildpacks/ci
            inputs:
              - name: buildpacks-ci
              - name: deployments-buildpacks
            run:
              path: buildpacks-ci/scripts/recreate-bosh-lite
            params:
              DEPLOYMENT_NAME: cf-release-ci-8
              PASSWORD: {{bosh-lite-password}}
          ensure:
            put: deployments-buildpacks
            params:
              repository: recreate-bosh-lite/deployments-buildpacks
              rebase: true
        - aggregate:
          - get: bosh-lite
          - get: cf-release
          - get: lite-stemcell
          - get: java-buildpack-github-release
            params:
              globs:
                - java-buildpack-v*.zip
          - get: java-offline-buildpack-github-release
            params:
              globs:
                - java-buildpack-offline-v*.zip
          - get: go-buildpack-github-release
          - get: python-buildpack-github-release
          - get: nodejs-buildpack-github-release
          - get: ruby-buildpack-github-release
          - get: php-buildpack-github-release
          - get: staticfile-buildpack-github-release
          - get: binary-buildpack-github-release
        - task: generate-manifest
          file: buildpacks-ci/tasks/develop-make-manifest.yml
          config:
            params:
              DEPLOYMENT_NAME: cf-release-ci-8
              CF_CI_PASSWORD: {{ci-cf-password}}
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: generate-manifest/deployments-buildpacks
        - task: create-cf-release
          file: buildpacks-ci/tasks/create-release.yml
          privileged: true
        - put: cf-release-ci-8-cf-deployment
          params:
            manifest: deployments-buildpacks/deployments/cf-release-ci-8/manifest.yml
            stemcells: [lite-stemcell/*.tgz]
            releases: [create-cf-release/cf-release/dev_releases/cf/*.tgz]
        on_failure:
          put: failure-alert
          params:
            text: "cf-release deploy-cf-to-cf-release-ci-8 job on Concourse failed! \n Check: https://buildpacks.ci.cf-app.com/pipelines/cf-release/jobs/deploy-cf-to-cf-release-ci-8"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: cats
    serial: true
    serial_groups: [ cf-release-ci-8 ]
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: cf-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
          trigger: true
        - get: deployments-buildpacks
        - get: java-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: java-offline-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: go-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: nodejs-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: python-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: ruby-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: php-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: staticfile-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
        - get: binary-buildpack-github-release
          passed: [ deploy-cf-to-cf-release-ci-8 ]
      - do:
        - task: cats
          config:
            platform: linux
            image: docker:///cfbuildpacks/ci
            inputs:
              - name: buildpacks-ci
              - name: cf-release
              - name: deployments-buildpacks
            run:
              path: buildpacks-ci/scripts/cats
            params:
              DEPLOYMENT_NAME: cf-release-ci-8
              CI_CF_USERNAME: {{ci-cf-username}}
              CI_CF_PASSWORD: {{ci-cf-password}}
          privileged: true
        on_failure:
          put: failure-alert
          params:
            text: "cf-release cats job on Concourse failed! \n Check: https://buildpacks.ci.cf-app.com/pipelines/cf-release/jobs/cats"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: ship-it
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: cf-release
          resource: cf-release-develop
          params:
            submodules: none
        - get: java-buildpack-github-release
          passed: [ cats ]
        - get: java-offline-buildpack-github-release
          passed: [ cats ]
        - get: go-buildpack-github-release
          passed: [ cats ]
        - get: nodejs-buildpack-github-release
          passed: [ cats ]
        - get: python-buildpack-github-release
          passed: [ cats ]
        - get: ruby-buildpack-github-release
          passed: [ cats ]
        - get: php-buildpack-github-release
          passed: [ cats ]
        - get: staticfile-buildpack-github-release
          passed: [ cats ]
        - get: binary-buildpack-github-release
          passed: [ cats ]
<% %w(go ruby binary staticfile nodejs php python java java-offline).each do |language| %>
  - name: bosh-release-<%= language %>
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: release
          resource: buildpack-releases
        - get: blob
          resource: <%= language %>-buildpack-github-release
          trigger: true
          passed: [ ship-it ]
      - do:
        - task: convert release version to version resource
          file: buildpacks-ci/tasks/convert-release-to-version.yml
        - task: create-bosh-release
          file: buildpacks-ci/tasks/create-bosh-release.yml
          config:
            params:
              ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
              SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
              <% case language
                 when /offline/ %>
              BLOB_GLOB: ../blob/java-buildpack-offline*.zip
              BLOB_NAME: java-buildpack
              <% when /java/ %>
              BLOB_GLOB: ../blob/java-buildpack-v*.zip
              BLOB_NAME: java-buildpack
              <% else %>
              BLOB_GLOB: ../blob/<%= language %>*.zip
              BLOB_NAME: <%= language %>-buildpack
              <% end %>
              RELEASE_NAME: <%= language %>-buildpack-release
              RELEASE_DIR: release/<%= language %>-buildpack-release
        - put: buildpack-releases
          params:
            repository: create-bosh-release/release
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "<%= language %>-buildpack bosh-release job on Concourse failed! \n Check: https://buildpacks.ci.cf-app.com/pipelines/<%= language %>-buildpack/jobs/bosh-release"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: cf-release for <%= language %>
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack-releases
          passed: [ bosh-release-<%= language %> ]
        - get: cf-release
          resource: cf-release-develop
        - get: <%= language %>-buildpack-github-release
          <% case language; when /offline/ %>
          params:
            globs:
              - java-buildpack-offline-v*.zip
          <% when /java/ %>
          params:
            globs:
              - java-buildpack-v*.zip
          <% end %>
          passed: [ bosh-release-<%= language %> ]
          trigger: true
      - do:
        - task: check-can-i-bump
          config:
            platform: linux
            image: docker:///cfbuildpacks/ci
            inputs:
              - name: buildpacks-ci
            run:
              path: buildpacks-ci/scripts/release/cf/check-can-i-bump
        - task: upload-blobs
          config:
            platform: linux
            image: docker:///cfbuildpacks/ci
            inputs:
              - name: buildpacks-ci
              - name: cf-release
              - name: <%=language%>-buildpack-github-release
              - name: buildpack-releases
            run:
              path: buildpacks-ci/scripts/release/cf/upload_blobs
            params:
              ACCESS_KEY_ID: {{blobstore-access-key}}
              SECRET_ACCESS_KEY: {{blobstore-secret-key}}
              BUILDPACK_NAME: <%= language %>-buildpack
          privileged: true
        - put: cf-release-develop
          params:
            repository: upload-blobs/cf-release
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "cf-release ship-it job on Concourse failed! \n Check: https://buildpacks.ci.cf-app.com/pipelines/cf-release/jobs/ship-it"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
