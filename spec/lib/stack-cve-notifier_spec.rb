require 'fileutils'
require 'spec_helper'
require_relative '../../lib/stack-cve-notifier.rb'
require_relative '../../lib/cve-logger.rb'

describe StackCVENotifier do
  let(:cves_dir) { Dir.mktmpdir }
  let(:logger) { CVELogger.new(cves_dir) }
  let(:tracker_client) { (double('TrackerClient').as_null_object) }
  let(:slack_client) { double('SlackClient').as_null_object }
  subject { StackCVENotifier.new(logger, cves_dir) }

  before(:each) do
    allow_any_instance_of(CVETags).to receive(:related_cves).and_return([
      { title: 'fake title for CVE', description: 'fake body for CVE'}
    ])

    Dir.chdir(cves_dir) do
      `git init`
    end

    allow(TrackerClient).to receive(:new).and_return(tracker_client)
    allow(SlackClient).to receive(:new).and_return(slack_client)
    allow(Octokit).to receive(:create_issue)
  end

  it 'posts to tracker' do
    expect(tracker_client).to receive(:post_to_tracker).
      with(
        "address: fake title for CVE",
        "fake body for CVE"
      )

    subject.run!("fake os", "fake os")
  end

  it 'posts to slack' do
    expect(slack_client).to receive(:post_to_slack).
      with("There are *1* new CVEs:\n- fake title for CVE*\n")

    subject.run!("fake os", "fake os")
  end

  it 'creates a github issue' do
    expect(Octokit).to receive(:create_issue).
      with(
        'pivotal-cf/pcf-security-notices',
        'fake title for CVE',
        "```\nfake body for CVE\n```"
      )

    subject.run!("fake os", "fake os")

  end
end
